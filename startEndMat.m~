staEndMat=[];
i=1;
flag = 0;
while (i < length(index1)-1)
    n_start = index1(i);
    while ((index1(i+1) - index1(i)) == 1)
        if (i < length(index1)-1)
            i = i+1;
        end
    end
    n_end = index1(i);
    %if (n_end - n_start > 100)
        staEndMat = [staEndMat; n_start, n_end];
    %end
%     if (n_end - n_start > 30) && flag
%         staEndMat = [staEndMat, n_end];
%         flag = 0;
%     elseif  (n_end - n_start > 50)
%         staEndMat = [staEndMat, n_start, n_end];
%     elseif (n_end - n_start > 20)
%         staEndMat = [staEndMat, n_start];
%         flag = 1;
%     end
    i=i+1;
end

seMat=[];
i=1;
while (i<size(staEndMat, 1)) % align all small syllables into one phrase
    s=staEndMat(i, 1);
    e=staEndMat(i, 2);
    while ((i+1) < size(staEndMat, 1)+1)
        if ((staEndMat(i+1,1)-staEndMat(i,2))<0.2*Fs/128)
            e=staEndMat(i+1, 2);
            i=i+1;
        else
            break;
        end
    end
    seMat=[seMat; s, e];
    i=i+1;
end

seMat=seMat.*128./Fs; % convert point scale into time scale

seg=[];
for i=1:size(seMat,1)
    if ((seMat(i,2)-seMat(i,1))>0.8) % if phrase length > 0.8s, keep it
        seg = [seg; seMat(i,1)-0.1, seMat(i,2)+0.1]; % add 0.1s at the front and end of phrase
    end
end

for i=1:size(seg,1)
    y = seg
    audiowrite(filename,y,Fs)   

    